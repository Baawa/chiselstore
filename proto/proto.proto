syntax = "proto3";

package proto;

service RPC {
    rpc Execute(Query) returns (QueryResults);
    // Omnipaxos
    rpc Prepare(PrepareReq) returns (Void);
    rpc Promise(PromiseReq) returns (Void);
    rpc AcceptSync(AcceptSyncReq) returns (Void);
    rpc FirstAccept(FirstAcceptReq) returns (Void);
    rpc AcceptDecide(AcceptDecideReq) returns (Void);
    rpc Accepted(AcceptedReq) returns (Void);
    rpc Decide(DecideReq) returns (Void);
    rpc AcceptStopSign(AcceptStopSignReq) returns (Void);
    rpc AcceptedStopSign(AcceptedStopSignReq) returns (Void);
    rpc DecideStopSign(DecideStopSignReq) returns (Void);
}


message Void {
}

message Query {
    string sql = 1;
}

message QueryResults {
    repeated QueryRow rows = 1;
}

message QueryRow {
    repeated string values = 1;
}

// Omnipaxos

message Ballot {
    uint32 n = 1;
    uint64 priority = 2;
    uint64 pid = 3;
}

message StoreCommand {
    uint64 id = 1;
    string sql = 2;
}

message SyncItem {
    oneof item {
        Entries entries = 1;
        bool snapshot = 2;
        bool none = 3;
    }

    message Entries {
        repeated StoreCommand store_commands = 1;
    }
}

message StopSign {
    uint32 config_id = 1;
    repeated uint64 nodes = 2;
    repeated uint32 metadata = 3;
}

message PrepareReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    uint64 ld = 4;
    Ballot n_accepted = 5;
    uint64 la = 6;
}

message PromiseReq {
    uint64 from = 1;
    uint64 to = 2;

    Ballot n = 3;
    Ballot n_accepted = 4;
    optional SyncItem sync_item = 5;
    uint64 ld = 6;
    uint64 la = 7;
    optional StopSign stop_sign = 8;
}

message AcceptSyncReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    SyncItem sync_item = 4;
    uint64 sync_idx = 5;
    optional uint64 decide_idx = 6;
    optional StopSign stop_sign = 7;
}

message FirstAcceptReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    repeated StoreCommand entries = 4;
}

message AcceptDecideReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    uint64 ld = 4;
    repeated StoreCommand entries = 5;
}

message AcceptedReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    uint64 la = 4;
}

message DecideReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    uint64 ld = 4;
}

message AcceptStopSignReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
    StopSign ss = 4;
}

message AcceptedStopSignReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
}

message DecideStopSignReq {
    uint64 from = 1;
    uint64 to = 2;
    
    Ballot n = 3;
}

